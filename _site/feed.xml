<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2019-09-21T19:56:28+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">RoKang</title><subtitle>생각나는 대로 정리하는 블로그
</subtitle><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><entry><title type="html">nodejs에서 process.env로 환경변수 사용하기</title><link href="http://localhost:4000/nodsjs/bash/zsh/2019/09/20/bash-profile-permanent/" rel="alternate" type="text/html" title="nodejs에서 process.env로 환경변수 사용하기" /><published>2019-09-20T07:07:07+09:00</published><updated>2019-09-20T07:07:07+09:00</updated><id>http://localhost:4000/nodsjs/bash/zsh/2019/09/20/bash-profile-permanent</id><content type="html" xml:base="http://localhost:4000/nodsjs/bash/zsh/2019/09/20/bash-profile-permanent/">&lt;p&gt;nodejs에서 RDS에 접근하기 위한 설정 내용을 입력해야하는데 하드코딩하는 것은 문제가 있다고 판단(실제 서비스는 더더욱 그래서는 안되겠지)&lt;/p&gt;

&lt;p&gt;그래서 쉘에 환경변수로 설정 내용을 등록하고 nodejs에서 process.env 객체로 접근하는 방식을 사용하기로 함.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;그런데..?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;.bash_profile에 환경변수를 등록해도 process.env에서 출력이 안됨.
구글링을 통해 문제를 파악함.&lt;/p&gt;

&lt;p&gt;먼저, bash_profile, bashrc를 제대로 알고 있지 않아서 개념 정리를 따로 함.&lt;/p&gt;

&lt;h3 id=&quot;login-shell&quot;&gt;Login Shell&lt;/h3&gt;
&lt;p&gt;계정과 암호를 입력해서 Shell을 실행하는 것. ssh로 접속하거나 GUI를 통해서 Shell을 실행하는 경우&lt;/p&gt;

&lt;h3 id=&quot;non-login-shell&quot;&gt;Non-Login Shell&lt;/h3&gt;
&lt;p&gt;말 그대로 로그인 없이 Shell을 실행하는 것. ssh로 접속 후 다시 bash를 실행하는 경우나 새 탭으로 터미널을 띄우는 경우&lt;/p&gt;

&lt;h3 id=&quot;bashrc&quot;&gt;.bashrc&lt;/h3&gt;
&lt;p&gt;Non-Login Shell에서 실행된다.&lt;/p&gt;

&lt;h3 id=&quot;bash_profile&quot;&gt;.bash_profile&lt;/h3&gt;
&lt;p&gt;Login Shell에서 실행된다. 어떤 shell 프로그램이던 .profile은 로드되지만 .bash_profile은 bash shell로 로그인 할 때만 실행된다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; 단, MAC OS 에서는 로그인 여부 관계 없이 모든 터미널을 Login Shell로 실행한다. 즉 모든 bash 터미널은 실행될 때 .bash_profile을 로드하는 것. 그런데 왜 process.env에서 출력되지 않았을까?&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;A) 내가 쓰던 쉘이 zsh여서…&lt;/strong&gt; &lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;&lt;em&gt;해결방법&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;.zshrc에 source ~/.bash_profile을 추가해서 zshrc가 로드될 때마다 .bash_profile을 로드하기&lt;/li&gt;
    &lt;li&gt;그냥 .zshrc에 다 때려넣기(이게 나아보인다)&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;궁금했던-것&quot;&gt;궁금했던 것&lt;/h4&gt;
&lt;p&gt;bashrc가 Non-Login Shell에서 실행되면 zshrc도 마찬가지아니냐?&lt;/p&gt;
&lt;h4 id=&quot;해결&quot;&gt;해결&lt;/h4&gt;
&lt;p&gt;zshrc는 zsh_profile로 구분되어 있지 않음. zshrc는 로그인 비로그인 상관없이 항상 실행된다는군요.&lt;/p&gt;</content><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><summary type="html">nodejs에서 RDS에 접근하기 위한 설정 내용을 입력해야하는데 하드코딩하는 것은 문제가 있다고 판단(실제 서비스는 더더욱 그래서는 안되겠지)</summary></entry><entry><title type="html">zsh에서 alias로 편하게 살기</title><link href="http://localhost:4000/zsh/2019/09/19/zshrc-alias/" rel="alternate" type="text/html" title="zsh에서 alias로 편하게 살기" /><published>2019-09-19T07:07:07+09:00</published><updated>2019-09-19T07:07:07+09:00</updated><id>http://localhost:4000/zsh/2019/09/19/zshrc-alias</id><content type="html" xml:base="http://localhost:4000/zsh/2019/09/19/zshrc-alias/">&lt;p&gt;AWS EC2를 쓰다가 매번 터미널 켤 때마다 커맨드 입력하는게 비효율적이다 싶었음.
쉘 스크립트 찾아보다가 alias 사용하면 매우 간단하게 된다는 걸 알게 됨.
(bash를 쓴다면 zshrc를 bashrc로 치환하면 됨)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;순서&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;vi ~/.zshrc&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;alias [name]='cd [path]; ssh -i &amp;lt;private_keyfile.pem&amp;gt; &amp;lt;server&amp;gt;@&amp;lt;Public IP Address&amp;gt;;'&lt;/code&gt; 추가&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;source ~/.zshrc&lt;/code&gt; 로 커맨드 적용&lt;/li&gt;
  &lt;li&gt;터미널에서 [name] 입력하면 사용 가능&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;블로그를 위해 blog alias와 blog_push alias도 추가&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote class=&quot;message&quot;&gt;
  &lt;p&gt;zshrc에서 rc가 뭘까? &lt;br /&gt;
A : It stands for “run commands”. (중간 생략) rc stuck as a name for any list of commands. &lt;br /&gt;&lt;br /&gt;
&lt;em&gt;(superuser.com의 답변 중에서)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><summary type="html">AWS EC2를 쓰다가 매번 터미널 켤 때마다 커맨드 입력하는게 비효율적이다 싶었음. 쉘 스크립트 찾아보다가 alias 사용하면 매우 간단하게 된다는 걸 알게 됨. (bash를 쓴다면 zshrc를 bashrc로 치환하면 됨)</summary></entry><entry><title type="html">zsh에서 alias로 편하게 살기</title><link href="http://localhost:4000/nodejs/global/module/2019/09/19/nodejs-local-module-access/" rel="alternate" type="text/html" title="zsh에서 alias로 편하게 살기" /><published>2019-09-19T07:07:07+09:00</published><updated>2019-09-19T07:07:07+09:00</updated><id>http://localhost:4000/nodejs/global/module/2019/09/19/nodejs-local-module-access</id><content type="html" xml:base="http://localhost:4000/nodejs/global/module/2019/09/19/nodejs-local-module-access/"></content><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><summary type="html"></summary></entry><entry><title type="html">Slack 채널에 Trello 보드 연동하기</title><link href="http://localhost:4000/trello/slack/2019/09/17/connect-slack-with-trello/" rel="alternate" type="text/html" title="Slack 채널에 Trello 보드 연동하기" /><published>2019-09-17T07:07:07+09:00</published><updated>2019-09-17T07:07:07+09:00</updated><id>http://localhost:4000/trello/slack/2019/09/17/connect-slack-with-trello</id><content type="html" xml:base="http://localhost:4000/trello/slack/2019/09/17/connect-slack-with-trello/">&lt;p&gt;별 거 없는데 나중에 또 같은 일을 해야한다면 시간을 줄이기 위해서 씀.
협업 진행을 위해 slack과 trello를 사용하려했는데 두 개를 연동 가능하다는 것을 알게 됐음.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;순서&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;slack에서 trello 앱을 설치&lt;/li&gt;
  &lt;li&gt;trello에서 팀을 하나 만들고 slack에서 공유할 보드 하나를 생성함(팀으로만 slack 공유가 가능함. 개인으로 안됨.)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://trello.com/platforms/slack&quot;&gt;Add to Slack&lt;/a&gt; 클릭에 클릭에 클릭을 걸치면 선택한 trello 팀이 slack의 workspace에 연결됨. 링크가 안 뜬다면 trello 팀 setting에 들어가면 settings 탭이 있는데 ‘Slack Team Linking’ 부분 참고하면 됨.&lt;/li&gt;
  &lt;li&gt;trello와 연동하고 싶은 slack 채널을 하나 생성함(보통 프로젝트 이름)&lt;/li&gt;
  &lt;li&gt;만든 채널에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;/trello setup&lt;/code&gt; 입력하면 slack에서 trello를 관리,조작 할 수 있는 권한을 부여함.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/trello link&lt;/code&gt; [채널에서 공유할 보드 링크] 를 땅 누르면 보드 리스트가 나옴.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/trello help&lt;/code&gt; 로 다양한 명령어 확인해서 유용하게 쓰자.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trello Alerts&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Trello에서 리스트가 생기는 등의 이벤트가 발생할 때 slack에 알리기 위함&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
  &lt;li&gt;slack과 연동한 trello 보드에 들어가서 Show Menu &amp;gt; Power-Ups를 클릭하면 여러 익스텐션들이 나오는데 slack 검색.&lt;/li&gt;
  &lt;li&gt;slack 추가하면 Show Menu 버튼 옆에 Slack 버튼이 생성됨. 그거 클릭하면 Add Slack Alert… 버튼 있음.&lt;/li&gt;
  &lt;li&gt;그거 누르고 또 뭐 권한 부여하는 단계 있는데 다 진행하고 Add Slack Alert… 버튼 다시 클릭.&lt;/li&gt;
  &lt;li&gt;알림 보내고 싶은 채널이랑 이벤트 종류 선택하고나면(난 전부 다 선택)…&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DONE&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;테스트해보니 잘 됨.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote class=&quot;message&quot;&gt;
  &lt;p&gt;… 제출 후에도 수정 쌉가능! ㅎㅇㅌ :) &lt;br /&gt;
&lt;em&gt;(LG CNS 인재확보팀의 Web 발신 문자 중에서)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><summary type="html">별 거 없는데 나중에 또 같은 일을 해야한다면 시간을 줄이기 위해서 씀. 협업 진행을 위해 slack과 trello를 사용하려했는데 두 개를 연동 가능하다는 것을 알게 됐음.</summary></entry><entry><title type="html">Javascript Prototype 개념</title><link href="http://localhost:4000/javascript/prototype/2019/09/12/javascript-prototype-1/" rel="alternate" type="text/html" title="Javascript Prototype 개념" /><published>2019-09-12T07:07:07+09:00</published><updated>2019-09-12T07:07:07+09:00</updated><id>http://localhost:4000/javascript/prototype/2019/09/12/javascript-prototype-1</id><content type="html" xml:base="http://localhost:4000/javascript/prototype/2019/09/12/javascript-prototype-1/">&lt;p&gt;본문 : &lt;a href=&quot;https://medium.com/better-programming/prototypes-in-javascript-5bba2990e04b&quot;&gt;Medium post written by Rupesh Mishra&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;링크 글에 있는 설명이 기가맥힘.&lt;/p&gt;

&lt;p class=&quot;message&quot;&gt;&lt;strong&gt;HIGHLIGHT&lt;/strong&gt;: Prototype object of the constructor function is shared among all the objects created using the constructor function.&lt;/p&gt;

&lt;p class=&quot;message&quot;&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: 프로토타입의 프로퍼티를 재정의하면 프로토타입의 값이 바뀌는게 아니라 해당 객체가 독립된 프로퍼티를 생성하게 된다. 하지만 프로토타입의 프로퍼티가 Array라면 어떤 객체가 Array를 조작했을 땐 새로운 Array 프로퍼티가 객체에 생성되는게 아니라 프로토타입의 Array가 변한다.&lt;/p&gt;

&lt;h3 id=&quot;결론&quot;&gt;결론&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Constructor와 Prototype의 특성을 잘 이해해야 한다.&lt;/li&gt;
  &lt;li&gt;객체 고유의 값은 Constructor로, 메모리 낭비를 방지하기 위해 객체끼리 공유할 수 있는 부분은 Prototype으로 설정하여 잘  조합해야 한다.&lt;/li&gt;
&lt;/ol&gt;</content><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><summary type="html">본문 : Medium post written by Rupesh Mishra</summary></entry><entry><title type="html">Apple iOS 개발자 계정 만들기</title><link href="http://localhost:4000/ios/apple/2019/04/27/apple-developer-enroll/" rel="alternate" type="text/html" title="Apple iOS 개발자 계정 만들기" /><published>2019-04-27T06:07:07+09:00</published><updated>2019-04-27T06:07:07+09:00</updated><id>http://localhost:4000/ios/apple/2019/04/27/apple-developer-enroll</id><content type="html" xml:base="http://localhost:4000/ios/apple/2019/04/27/apple-developer-enroll/">&lt;p&gt;Apple App Store에 앱을 등록하기 위해서는 Apple Developer 계정이 필요합니다.&lt;br /&gt;
이번 글에서는 Apple Developer 계정을 생성하는 방법을 정리하겠습니다.&lt;/p&gt;

&lt;h3 id=&quot;준비하기&quot;&gt;준비하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;신용카드&lt;/li&gt;
  &lt;li&gt;Apple 계정&lt;/li&gt;
  &lt;li&gt;영문 주소 &lt;a href=&quot;http://www.jusoen.com/&quot;&gt;(영문 주소 변환 사이트)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;진행하기&quot;&gt;진행하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.apple.com/programs/enroll/&quot;&gt;Apple Developer Program Enroll&lt;/a&gt; 를 클릭하면 Developer 계정을 만들기 위해 필요한 내용이 나옵니다.&lt;br /&gt;
A D-U-N-S® Number는 dun&amp;amp;bradstreet에서 발급하는 국제사업자등록번호로 회사 법인을 증명하기 위한&lt;br /&gt;
번호입니다. Apple Developer 계정을 회사 계정으로 등록하기 위해서는 D-U-N-S 번호가 필수입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class=&quot;message&quot;&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: 저처럼 1인 개발자이거나 개인 비즈니스를 운영하시는 분이라면 D-U-N-S가 필요없습니다. 회사 계정이 필요하신 분들은 &lt;a href=&quot;https://m.blog.naver.com/PostView.nhn?blogId=watchmafia&amp;amp;logNo=220669940824&amp;amp;proxyReferer=https%3A%2F%2Fwww.google.com%2F&quot;&gt;링크&lt;/a&gt;혹은 구글에서 검색하면 D-U-N-S 번호를 쉽게 발급받으실 수 있을 겁니다. 참고로 D-U-N-S 발급을 포함한 Developer 계정 생성에 1달까지도 소요된다고 하니 기간을 넉넉하게 잡으시는게 정신건강에 좋을 것 같습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;img src=&quot;/assets/img/docs/apple-developer-enroll/below.png&quot; alt=&quot;Apple Developer Below&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;페이지 하단에 있는 Start Your Enrollment 버튼을 클릭하면 로그인 페이지가 나올텐데 Apple Developer로 등록하기 위한 Apple 계정으로 로그인하면 됩니다.&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Entity Type(유형)은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Invidiual / Sole Proprietor / Single Person Business&lt;/code&gt; 를 선택하면 됩니다. 회사 계정이신 분들은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Company / Organization&lt;/code&gt; 을 클릭하면 됩니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;진행하다 보면 주소를 입력하는 부분이 있습니다. 처음에 준비한 영문 주소로 작성하면 됩니다.
    &lt;ul&gt;
      &lt;li&gt;Postal Code : 우편번호&lt;br /&gt;&lt;/li&gt;
      &lt;li&gt;State / Province : -도 (ex. 경기도, 충청도, 서울특별시)&lt;br /&gt;&lt;/li&gt;
      &lt;li&gt;Town / City : -시 (ex. 서울시, 수원시)&lt;br /&gt;&lt;/li&gt;
      &lt;li&gt;Address Line 1, 2 : 나머지 상세주소(구, 동, …)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;등록을 완료하면 1년동안 사용 가능한 Developer 계정 ID를 받게 됩니다. 준비한 신용카드로 결제를 완료하면 
Apple에서 최종 승인을 해줍니다(시간이 좀 걸릴 수 있습니다. 저 같은 경우는 하루 정도 소요되었습니다)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;승인이 완료되면 &lt;a href=&quot;https://developer.apple.com/account/#/welcome&quot;&gt;Apple Developer Account Welcome&lt;/a&gt;에서 아래와 같은 화면을 보실 수 있을 겁니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;img src=&quot;/assets/img/docs/apple-developer-enroll/login.png&quot; alt=&quot;Apple Developer Account Login Page&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;마무리&quot;&gt;마무리&lt;/h3&gt;
&lt;p&gt;여기까지 Apple Developer 계정을 생성하는 방법을 알아 보았습니다. 다음 편에서는 Xcode에 Apple Developer를 등록하고 iOS App을 아이폰에서 실행하는 방법을 포스트하겠습니다. 도움이 되셨기를 바랍니다.&lt;/p&gt;</content><author><name>&lt;firstname&gt; &lt;lastname&gt;</name><email>&lt;mail@domain.tld&gt;</email></author><summary type="html">Apple App Store에 앱을 등록하기 위해서는 Apple Developer 계정이 필요합니다. 이번 글에서는 Apple Developer 계정을 생성하는 방법을 정리하겠습니다.</summary></entry></feed>